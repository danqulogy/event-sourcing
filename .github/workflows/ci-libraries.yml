name: CI Libraries

on:
  workflow_dispatch:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x, 20.x, 22.x]

    name: Validate build [Node.js ${{ matrix.node-version }}]

    steps:
      - uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: node-${{ matrix.node-version }}-turbo-${{ github.sha }}
          restore-keys: |
            node-${{ matrix.node-version }}-turbo-

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.10.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

  test-core-lib:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    name: Test core lib [Node.js ${{ matrix.node-version }}]

    steps:
      - uses: actions/checkout@v4

      - name: Cache turbo test setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: node-${{ matrix.node-version }}-turbo-${{ github.sha }}
          restore-keys: |
            node-${{ matrix.node-version }}-turbo-

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.10.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test linting, formatting and import sorting
        run: pnpm run ci --filter=@ocoda/event-sourcing

      - name: Test
        run: pnpm test --filter=@ocoda/event-sourcing

  test-integration-libs:
    runs-on: ubuntu-latest
    needs: [test-core-lib]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        database: [mongodb, dynamodb, postgres, mariadb]

    name: Test ${{ matrix.database }} lib [Node.js ${{ matrix.node-version }}]

    steps:
      - uses: actions/checkout@v4

      - name: Start database
        run: docker compose up -d ${{ matrix.database }}

      - name: Cache turbo test setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: node-${{ matrix.node-version }}-turbo-${{ github.sha }}
          restore-keys: |
            node-${{ matrix.node-version }}-turbo-

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.10.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test linting, formatting and import sorting
        run: pnpm run ci --filter=@ocoda/event-sourcing-${{ matrix.database }}

      - name: Test
        run: pnpm test --filter=@ocoda/event-sourcing-${{ matrix.database }}
